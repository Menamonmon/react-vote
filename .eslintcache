[{"/mnt/d/web-dev/react-vote/src/helpers/auth.js":"1","/mnt/d/web-dev/react-vote/src/pages/LoginForm.js":"2","/mnt/d/web-dev/react-vote/src/App.js":"3","/mnt/d/web-dev/react-vote/src/pages/Votes.js":"4","/mnt/d/web-dev/react-vote/src/components/Election.js":"5","/mnt/d/web-dev/react-vote/src/components/Nav.js":"6","/mnt/d/web-dev/react-vote/src/pages/Results.js":"7","/mnt/d/web-dev/react-vote/src/pages/LogoutPage.js":"8","/mnt/d/web-dev/react-vote/src/pages/SignupForm.js":"9","/mnt/d/web-dev/react-vote/src/pages/Home.js":"10","/mnt/d/web-dev/react-vote/src/index.js":"11","/mnt/d/web-dev/react-vote/src/components/FormError.js":"12","/mnt/d/web-dev/react-vote/src/contexts/AuthConext.js":"13","/mnt/d/web-dev/react-vote/src/components/ProtectedRoute.js":"14","/mnt/d/web-dev/react-vote/src/components/ElectionRoutes.js":"15","/mnt/d/web-dev/react-vote/src/components/DropdownMenu.js":"16","/mnt/d/web-dev/react-vote/src/helpers/requests.js":"17","/mnt/d/web-dev/react-vote/src/helpers/elections.js":"18","/mnt/d/web-dev/react-vote/src/helpers/passwordValidations.js":"19"},{"size":1067,"mtime":1608244220309,"results":"20","hashOfConfig":"21"},{"size":4926,"mtime":1608250531668,"results":"22","hashOfConfig":"21"},{"size":2000,"mtime":1608251294297,"results":"23","hashOfConfig":"21"},{"size":133,"mtime":1606377683141,"results":"24","hashOfConfig":"21"},{"size":2074,"mtime":1608054406936,"results":"25","hashOfConfig":"21"},{"size":2313,"mtime":1608249463139,"results":"26","hashOfConfig":"21"},{"size":132,"mtime":1606377709415,"results":"27","hashOfConfig":"21"},{"size":766,"mtime":1608251447040,"results":"28","hashOfConfig":"21"},{"size":140,"mtime":1606378068862,"results":"29","hashOfConfig":"21"},{"size":161,"mtime":1606377661274,"results":"30","hashOfConfig":"21"},{"size":144,"mtime":1606334061467,"results":"31","hashOfConfig":"21"},{"size":463,"mtime":1607850701316,"results":"32","hashOfConfig":"21"},{"size":2770,"mtime":1608252113335,"results":"33","hashOfConfig":"21"},{"size":1180,"mtime":1608251110255,"results":"34","hashOfConfig":"21"},{"size":1155,"mtime":1608242352666,"results":"35","hashOfConfig":"21"},{"size":683,"mtime":1607911890363,"results":"36","hashOfConfig":"21"},{"size":303,"mtime":1608245530179,"results":"37","hashOfConfig":"21"},{"size":340,"mtime":1608245468984,"results":"38","hashOfConfig":"21"},{"size":1255,"mtime":1607902437185,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i29wi6",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/d/web-dev/react-vote/src/helpers/auth.js",[],"/mnt/d/web-dev/react-vote/src/pages/LoginForm.js",["84"],"import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from '../contexts/AuthConext';\r\n\r\nimport FormError from \"../components/FormError\";\r\n\r\n\r\n\r\nconst initialLoginData = {\r\n  username: \"\",\r\n  password: \"\",\r\n  confirm_password: \"\",\r\n};\r\n\r\nconst initialLoginErrorsData = {\r\n  username: [],\r\n  password: [],\r\n  confirm_password: [],\r\n};\r\n\r\nfunction errorToFormErrorComponent(errors) {\r\n  const cats = Object.keys(errors);\r\n  const final = {};\r\n  for (let key of cats) {\r\n    let currentErrors = errors[key];\r\n    let error = <></>;\r\n    if (currentErrors.length > 0) {\r\n      error = <FormError errors={currentErrors} type=\"error\" />;\r\n    }\r\n    final[key] = error;\r\n  }\r\n  return final;\r\n}\r\n\r\nexport default function LoginForm(props) {\r\n  const { passvalidation, redirect } = props;\r\n  const { login } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  // The Component's states\r\n  let [formData, setForm] = useState(initialLoginData);\r\n  let [errors, setErrors] = useState(initialLoginErrorsData);\r\n\r\n  // A fuction that will validate all the data in the form\r\n  const validateFormData = (fd) => {\r\n    let fieldsAreMissing = false;\r\n    for (const [field, data] of Object.entries(fd)) {\r\n      if (data.trim() === \"\") {\r\n        fieldsAreMissing = true;\r\n        setErrors((prev) => {\r\n          const errorList = [...prev[field]];\r\n          errorList.push(`${field.replaceAll(\"_\", \" \")} is missing.`);\r\n          return { ...prev, [field]: errorList };\r\n        });\r\n      }\r\n    }\r\n    if (fieldsAreMissing) {\r\n      return false;\r\n    }\r\n\r\n    const { password, confirm_password } = fd;\r\n    const passwordsValidation = passvalidation(password, confirm_password);\r\n    if (passwordsValidation === true) {\r\n      return true;\r\n    } else {\r\n      setErrors((prev) => {\r\n        let confirmPasswordErrorList = [...prev.confirm_password];\r\n        if (Array.isArray(passwordsValidation)) {\r\n          confirmPasswordErrorList = confirmPasswordErrorList.concat(\r\n            passwordsValidation\r\n          );\r\n        } else {\r\n          confirmPasswordErrorList.push(passwordsValidation);\r\n        }\r\n        return { ...prev, confirm_password: confirmPasswordErrorList };\r\n      });\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // A function that would run the necessary validations before performing the onSubmit action from the props\r\n  const submitForm = (e) => {\r\n    setErrors(initialLoginErrorsData);\r\n    // const isFormDataValid = validateFormData(formData);\r\n    // if (!isFormDataValid) {\r\n    //   return false;\r\n    // }\r\n\r\n    function loginSuccessCallback() {\r\n      history.push(redirect);\r\n    }\r\n\r\n    function loginErrorCallback(error) {\r\n      if (!error.response || error.response.status !== 400) {\r\n        console.log(error);\r\n        return false;\r\n      }\r\n      const errorMessage = \"invalid username and/or password.\";\r\n      setErrors((prev) => {\r\n        const usernameErrors = [...prev.username];\r\n        usernameErrors.push(errorMessage);\r\n        return { ...prev, username: usernameErrors };\r\n      });\r\n    }\r\n\r\n    login(formData, loginSuccessCallback, loginErrorCallback);\r\n  };\r\n\r\n  // A function that updates the formData as the data changes in the input fields below\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Converting the errors state into displayable compoenents\r\n  const errorComponents = errorToFormErrorComponent(errors);\r\n  return (\r\n    <form className=\"auth-form\">\r\n      <h2 className=\"auth-form-title\">Login to React Vote</h2>\r\n      <label className=\"form-label login-label\">\r\n        Username:\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={formData.username}\r\n          onChange={handleChange}\r\n          className=\"form-field login username-input\"\r\n          name=\"username\"\r\n        />\r\n        {errorComponents.username}\r\n      </label>\r\n      <label className=\"form-label login-label\">\r\n        Password:\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          className=\"form-field login password-input\"\r\n          name=\"password\"\r\n        />\r\n        {errorComponents.password}\r\n      </label>\r\n      <label className=\"form-label login-label\">\r\n        Confirm Password:\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          value={formData.confirm_password}\r\n          onChange={handleChange}\r\n          className=\"form-field login confirm-password-input\"\r\n          name=\"confirm_password\"\r\n        />\r\n        {errorComponents.confirm_password}\r\n      </label>\r\n      <button className=\"form-submit-btn\" type=\"button\" onClick={submitForm}>\r\n        Login\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","/mnt/d/web-dev/react-vote/src/App.js",[],"/mnt/d/web-dev/react-vote/src/pages/Votes.js",[],["85","86"],"/mnt/d/web-dev/react-vote/src/components/Election.js",[],"/mnt/d/web-dev/react-vote/src/components/Nav.js",[],"/mnt/d/web-dev/react-vote/src/pages/Results.js",[],["87","88"],"/mnt/d/web-dev/react-vote/src/pages/LogoutPage.js",[],"/mnt/d/web-dev/react-vote/src/pages/SignupForm.js",[],["89","90"],"/mnt/d/web-dev/react-vote/src/pages/Home.js",[],["91","92"],"/mnt/d/web-dev/react-vote/src/index.js",[],"/mnt/d/web-dev/react-vote/src/components/FormError.js",[],"/mnt/d/web-dev/react-vote/src/contexts/AuthConext.js",["93"],"import React, { createContext, useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\n\nimport { getUserData } from \"../helpers/requests\";\nimport { generateElectionLinks } from \"../helpers/elections\";\nimport {\n  addRequestsTokenToAxios,\n  removeRequestsTokenFromAxios,\n} from \"../helpers/auth\";\n\nconst initialAuth = {\n  isAuthenticated: false,\n  user: { elections: [], votes: [], electionLinks: [] },\n  login: () => {},\n  logout: () => { },\n  APIUrl: '',\n};\n\nexport const AuthContext = createContext({});\n\nexport const AuthProvider = ({ APIUrl, children }) => {\n  let [auth, setAuth] = useState(initialAuth);\n  let [user, changeUser] = useState(initialAuth.user);\n  function setUser(...args) {\n    changeUser(...args);\n    setAuth((p) => ({ ...p, user }));\n  }\n\n  useEffect(() => {\n    let isAuthenticated = Boolean(localStorage.getItem(\"isAuthenticated\"));\n    isAuthenticated = isAuthenticated === true ? true : false;\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    setAuth({ isAuthenticated, user, APIUrl });\n  }, []);\n\n  function login(userData, successCb = () => {}, errorCb = () => {}) {\n    axios\n      .post(`${APIUrl}accounts/login/`, userData)\n      .then((response) => {\n        const token = response.data.token;\n        if (token) {\n          localStorage.setItem(\"isAuthenticated\", true);\n        }\n        addRequestsTokenToAxios(token);\n\n        getUserData(APIUrl)\n          .then((response) => {\n            const [electionsResponse, votesResponse] = response;\n            const elections = electionsResponse.data;\n            const votes = votesResponse.data;\n            console.log(elections);\n            const electionLinks = generateElectionLinks(elections);\n            setUser(() => {\n              const newUser = { elections, votes, electionLinks };\n              localStorage.setItem(\"user\", JSON.stringify(newUser));\n              return newUser;\n            });\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n\n        successCb(response);\n      })\n      .catch((error) => {\n        console.log(error);\n        errorCb(error);\n      });\n  }\n\n  function logout(successCb = () => {}, errorCb = () => {}) {\n    axios\n      .get(`${APIUrl}accounts/logout`)\n      .then((response) => {\n        setUser(initialAuth.user);\n        removeRequestsTokenFromAxios();\n        localStorage.setItem(\"isAuthenticated\", false);\n        successCb(response);\n      })\n      .catch((error) => {\n        console.log(error);\n        errorCb(error);\n      });\n  }\n\n  return (\n    <AuthContext.Provider value={{ ...auth, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n\n  return context;\n}\n","/mnt/d/web-dev/react-vote/src/components/ProtectedRoute.js",[],"/mnt/d/web-dev/react-vote/src/components/ElectionRoutes.js",[],"/mnt/d/web-dev/react-vote/src/components/DropdownMenu.js",[],"/mnt/d/web-dev/react-vote/src/helpers/requests.js",[],"/mnt/d/web-dev/react-vote/src/helpers/elections.js",[],"/mnt/d/web-dev/react-vote/src/helpers/passwordValidations.js",[],{"ruleId":"94","severity":1,"message":"95","line":46,"column":9,"nodeType":"96","messageId":"97","endLine":46,"endColumn":25},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"98","replacedBy":"104"},{"ruleId":"100","replacedBy":"105"},{"ruleId":"98","replacedBy":"106"},{"ruleId":"100","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":35,"column":6,"nodeType":"110","endLine":35,"endColumn":8,"suggestions":"111"},"no-unused-vars","'validateFormData' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["112"],"no-negated-in-lhs",["113"],["112"],["113"],["112"],["113"],["112"],["113"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'APIUrl'. Either include it or remove the dependency array. If 'setAuth' needs the current value of 'APIUrl', you can also switch to useReducer instead of useState and read 'APIUrl' in the reducer.","ArrayExpression",["114"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [APIUrl]",{"range":"117","text":"118"},[1053,1055],"[APIUrl]"]