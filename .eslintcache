[{"/mnt/d/web-dev/react-vote/src/helpers/auth.js":"1","/mnt/d/web-dev/react-vote/src/pages/LoginForm.js":"2","/mnt/d/web-dev/react-vote/src/App.js":"3","/mnt/d/web-dev/react-vote/src/components/Election.js":"4","/mnt/d/web-dev/react-vote/src/components/Nav.js":"5","/mnt/d/web-dev/react-vote/src/pages/LogoutPage.js":"6","/mnt/d/web-dev/react-vote/src/pages/SignupForm.js":"7","/mnt/d/web-dev/react-vote/src/pages/Home.js":"8","/mnt/d/web-dev/react-vote/src/index.js":"9","/mnt/d/web-dev/react-vote/src/components/FormError.js":"10","/mnt/d/web-dev/react-vote/src/contexts/AuthConext.js":"11","/mnt/d/web-dev/react-vote/src/components/ProtectedRoute.js":"12","/mnt/d/web-dev/react-vote/src/components/ElectionRoutes.js":"13","/mnt/d/web-dev/react-vote/src/components/DropdownMenu.js":"14","/mnt/d/web-dev/react-vote/src/helpers/requests.js":"15","/mnt/d/web-dev/react-vote/src/helpers/elections.js":"16","/mnt/d/web-dev/react-vote/src/helpers/passwordValidations.js":"17","/mnt/d/web-dev/react-vote/src/pages/VotesPage.js":"18","/mnt/d/web-dev/react-vote/src/pages/ResultsPage.js":"19","/mnt/d/web-dev/react-vote/src/components/Vote.js":"20","/mnt/d/web-dev/react-vote/src/components/ResultBox.js":"21","/mnt/d/web-dev/react-vote/src/pages/index.js":"22"},{"size":1067,"mtime":1608244220309,"results":"23","hashOfConfig":"24"},{"size":3774,"mtime":1608823701826,"results":"25","hashOfConfig":"24"},{"size":1747,"mtime":1608823577921,"results":"26","hashOfConfig":"24"},{"size":4555,"mtime":1608823559224,"results":"27","hashOfConfig":"24"},{"size":2267,"mtime":1608823480339,"results":"28","hashOfConfig":"24"},{"size":802,"mtime":1608823719700,"results":"29","hashOfConfig":"24"},{"size":5794,"mtime":1608823777171,"results":"30","hashOfConfig":"24"},{"size":723,"mtime":1608824623156,"results":"31","hashOfConfig":"24"},{"size":144,"mtime":1606334061467,"results":"32","hashOfConfig":"24"},{"size":440,"mtime":1608823572324,"results":"33","hashOfConfig":"24"},{"size":3235,"mtime":1608823189160,"results":"34","hashOfConfig":"24"},{"size":1132,"mtime":1608824707721,"results":"35","hashOfConfig":"24"},{"size":734,"mtime":1608824878408,"results":"36","hashOfConfig":"24"},{"size":683,"mtime":1607911890363,"results":"37","hashOfConfig":"24"},{"size":508,"mtime":1608586261558,"results":"38","hashOfConfig":"24"},{"size":387,"mtime":1608589474046,"results":"39","hashOfConfig":"24"},{"size":1386,"mtime":1608354915796,"results":"40","hashOfConfig":"24"},{"size":942,"mtime":1608823753814,"results":"41","hashOfConfig":"24"},{"size":474,"mtime":1608825569826,"results":"42","hashOfConfig":"24"},{"size":567,"mtime":1608607412565,"results":"43","hashOfConfig":"24"},{"size":1494,"mtime":1608825106504,"results":"44","hashOfConfig":"24"},{"size":297,"mtime":1608823582487,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i29wi6",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/d/web-dev/react-vote/src/helpers/auth.js",[],"/mnt/d/web-dev/react-vote/src/pages/LoginForm.js",["98"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useAuth } from \"../contexts/AuthConext\";\r\nimport FormError from \"../components/FormError\";\r\n\r\nconst initialLoginData = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst initialLoginErrorsData = {\r\n  username: [],\r\n  password: [],\r\n};\r\n\r\nfunction errorToFormErrorComponent(errors) {\r\n  const cats = Object.keys(errors);\r\n  const final = {};\r\n  for (let key of cats) {\r\n    let currentErrors = errors[key];\r\n    let error = <></>;\r\n    if (currentErrors.length > 0) {\r\n      error = <FormError errors={currentErrors} type=\"error\" />;\r\n    }\r\n    final[key] = error;\r\n  }\r\n  return final;\r\n}\r\n\r\nexport default function LoginForm(props) {\r\n  const { redirect } = props;\r\n  const { login } = useAuth();\r\n  const history = useHistory();\r\n\r\n  // The Component's states\r\n  let [formData, setForm] = useState(initialLoginData);\r\n  let [errors, setErrors] = useState(initialLoginErrorsData);\r\n\r\n  // A fuction that will validate all the data in the form\r\n  const validateFormData = (fd) => {\r\n    let fieldsAreMissing = false;\r\n    for (const [field, data] of Object.entries(fd)) {\r\n      if (data.trim() === \"\") {\r\n        fieldsAreMissing = true;\r\n        setErrors((prev) => {\r\n          const errorList = [...prev[field]];\r\n          errorList.push(`${field.replaceAll(\"_\", \" \")} is missing.`);\r\n          return { ...prev, [field]: errorList };\r\n        });\r\n      }\r\n    }\r\n    return !fieldsAreMissing;\r\n  };\r\n\r\n  // A function that would run the necessary validations before performing the onSubmit action from the props\r\n  const submitForm = (e) => {\r\n    setErrors(initialLoginErrorsData);\r\n    const isFormDataValid = validateFormData(formData);\r\n    if (!isFormDataValid) {\r\n      return false;\r\n    }\r\n\r\n    function loginSuccessCallback() {\r\n      history.push(\"/\");\r\n    }\r\n\r\n    function loginErrorCallback(error) {\r\n      if (!error.response || error.response.status !== 400) {\r\n        console.log(error);\r\n        return false;\r\n      }\r\n      const errorMessage = \"invalid username and/or password.\";\r\n      setErrors((prev) => {\r\n        const usernameErrors = [...prev.username];\r\n        usernameErrors.push(errorMessage);\r\n        return { ...prev, username: usernameErrors };\r\n      });\r\n    }\r\n\r\n    login(formData, loginSuccessCallback, loginErrorCallback);\r\n  };\r\n\r\n  // A function that updates the formData as the data changes in the input fields below\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Converting the errors state into displayable compoenents\r\n  const errorComponents = errorToFormErrorComponent(errors);\r\n  return (\r\n    <form className=\"auth-form container\">\r\n      <h2 className=\"auth-form-title container-title\">Login to React Vote</h2>\r\n      <label className=\"form-label login-label\">\r\n        Username:\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={formData.username}\r\n          onChange={handleChange}\r\n          className=\"form-field login username-input\"\r\n          name=\"username\"\r\n        />\r\n        {errorComponents.username}\r\n      </label>\r\n      <label className=\"form-label login-label\">\r\n        Password:\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          className=\"form-field login password-input\"\r\n          name=\"password\"\r\n        />\r\n        {errorComponents.password}\r\n      </label>\r\n      <button\r\n        className=\"form-submit-btn container-btn\"\r\n        type=\"button\"\r\n        onClick={submitForm}\r\n      >\r\n        Login\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","/mnt/d/web-dev/react-vote/src/App.js",[],"/mnt/d/web-dev/react-vote/src/components/Election.js",["99"],"import React, { useEffect, useState } from \"react\";\r\nimport { deleteVote, submitVote } from \"../helpers/requests\";\r\nimport { useAuth } from \"../contexts/AuthConext\";\r\n\r\nexport function CandidateBox(props) {\r\n  const { name, party, checked } = props;\r\n  return (\r\n    <div\r\n      className={`container-btn candidate-box ${checked ? \"checked\" : \"\"}`}\r\n      onClick={props.onClick}\r\n    >\r\n      <h5 className=\"title\">{`${name} (${party})`}</h5>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CurrentCandidate = ({ name }) => (\r\n  <h4 className=\"container-subtitle current-candidate\">\r\n    {name ? `Chosen Candidate: ${name}` : \"No Candidate Chosen Yet\"}\r\n  </h4>\r\n);\r\n\r\nfunction ElectionFooter({ currentCandidate, onSubmit, onDelete }) {\r\n  return (\r\n    <div className=\"election-footer\">\r\n      <CurrentCandidate name={currentCandidate.name} />\r\n      <button\r\n        className=\"election-delete-btn container-btn form-submit-btn\"\r\n        onClick={onDelete}\r\n      >\r\n        Clear Vote\r\n      </button>\r\n      <button\r\n        className=\"election-submit-btn container-btn form-submit-btn\"\r\n        onClick={onSubmit}\r\n      >\r\n        Submit Vote\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Election(props) {\r\n  const { type, id, state, year, candidates } = props;\r\n\r\n  const {\r\n    APIUrl,\r\n    syncUserData,\r\n    user: { votes },\r\n  } = useAuth();\r\n\r\n  useEffect(() => {\r\n    setVote(loadVotes(votes));\r\n  }, []);\r\n\r\n  let [currentCandidate, setCurrentCandidate] = useState({});\r\n  let [vote, setVote] = useState({});\r\n  let [checkedCandidates, setCheckedCandidates] = useState(\r\n    Array(candidates.length).fill(false)\r\n  );\r\n\r\n  function loadVotes(votes) {\r\n    for (const vote of votes) {\r\n      if (vote.election.id === id) {\r\n        const candidate_id = vote.candidate.id;\r\n        const matchingCandidates = candidates.filter(\r\n          (candidate) => candidate.id === candidate_id\r\n        );\r\n        if (matchingCandidates.length !== 1) {\r\n          throw Error(\"Candidate ID Not Valid\");\r\n        }\r\n        const candidate = matchingCandidates[0];\r\n        const candidateIndex = candidates.indexOf(candidate);\r\n        setCheckedCandidates((p) => {\r\n          const prevCandidateIndex = candidates.indexOf(currentCandidate);\r\n          p[prevCandidateIndex] = false;\r\n          p[candidateIndex] = true;\r\n          return p;\r\n        });\r\n        setCurrentCandidate(candidate);\r\n        return vote;\r\n      }\r\n    }\r\n    setCheckedCandidates(Array(candidates.length).fill(false));\r\n  }\r\n\r\n  function submitElectionVote() {\r\n    const data = {\r\n      election_id: id,\r\n      candidate_id: currentCandidate.id,\r\n    };\r\n    if (Object.values(data).includes(undefined)) return;\r\n    submitVote(APIUrl, data).then(() => {\r\n      syncUserData().then(() => {\r\n        setVote(loadVotes(votes));\r\n      });\r\n    });\r\n  }\r\n\r\n  function deleteElectionVote() {\r\n    if (vote === undefined) {\r\n      setVote(loadVotes(votes));\r\n      return;\r\n    }\r\n    if (vote.id === undefined) return;\r\n    deleteVote(APIUrl, vote.id).then(() => {\r\n      syncUserData().then(() => {\r\n        setVote(loadVotes(votes));\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"election-container container\" key={id}>\r\n      <h3 className=\"election-type container-title\">\r\n        {`${state} ${type} Elections (${year}):`}\r\n      </h3>\r\n      <h4 className=\"container-subtitle\">\r\n        Choose One of The Candidates Below:\r\n      </h4>\r\n      <ul className=\"candidates-list\">\r\n        {candidates.map((candidate, index) => {\r\n          const { name, party, id } = candidate;\r\n          const onClick = () => {\r\n            setCurrentCandidate(candidate);\r\n            setCheckedCandidates((prevState) => {\r\n              prevState.fill(false);\r\n              prevState[index] = true;\r\n              return prevState;\r\n            });\r\n          };\r\n          return (\r\n            <CandidateBox\r\n              checked={checkedCandidates[index]}\r\n              name={name}\r\n              party={party}\r\n              onClick={onClick}\r\n              key={id}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n      <ElectionFooter\r\n        currentCandidate={currentCandidate}\r\n        onSubmit={submitElectionVote}\r\n        onDelete={deleteElectionVote}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function electionsList(elections) {\r\n  return elections.map(({ _type, id, state, year, candidate_set }) => (\r\n    <Election\r\n      type={_type}\r\n      id={id}\r\n      state={state}\r\n      year={year}\r\n      candidates={candidate_set}\r\n    />\r\n  ));\r\n}\r\n",["100","101"],"/mnt/d/web-dev/react-vote/src/components/Nav.js",[],["102","103"],"/mnt/d/web-dev/react-vote/src/pages/LogoutPage.js",["104"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthConext\";\n\nexport default function LogoutPage() {\n  const { logout } = useAuth();\n\n  useEffect(() => {\n    logout();\n  }, []);\n\n  return (\n    <div className=\"logout-page auth-form container\">\n      <h2 className=\"auth-form-title logout-title container-title\">Logout</h2>\n      <h5 className=\"logout-content container-subtitle\">\n        You are successfully logged out.\n      </h5>\n      <div className=\"logout-footer\">\n        <Link to=\"/login\" key=\"login\">\n          Login again.\n        </Link>\n        <br />\n        Don't have an account?{\" \"}\n        <Link to=\"/signup\" key=\"signup\">\n          Sign up\n        </Link>{\" \"}\n        from here.\n      </div>\n    </div>\n  );\n}\n","/mnt/d/web-dev/react-vote/src/pages/SignupForm.js",["105"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useAuth } from \"../contexts/AuthConext\";\r\nimport FormError from \"../components/FormError\";\r\nimport { signupPasswordValidation } from \"../helpers/passwordValidations\";\r\nimport axios from \"axios\";\r\n\r\nconst initialSignupData = {\r\n  username: \"\",\r\n  state: \"\",\r\n  password: \"\",\r\n  confirm_password: \"\",\r\n};\r\n\r\nconst initialSignupErrorsData = {\r\n  username: [],\r\n  state: [],\r\n  password: [],\r\n  confirm_password: [],\r\n};\r\n\r\nfunction errorToFormErrorComponent(errors) {\r\n  const cats = Object.keys(errors);\r\n  const final = {};\r\n  for (let key of cats) {\r\n    let currentErrors = errors[key];\r\n    let error = <></>;\r\n    if (currentErrors.length > 0) {\r\n      error = <FormError errors={currentErrors} type=\"error\" />;\r\n    }\r\n    final[key] = error;\r\n  }\r\n  return final;\r\n}\r\n\r\nexport default function SignupForm({ redirect }) {\r\n  const { signup, APIUrl } = useAuth();\r\n  const history = useHistory();\r\n  let [statesList, setStatesList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${APIUrl}users/states`)\r\n      .then(({ data }) => {\r\n        data = data.map(([value, content]) => ({ value, content }));\r\n        setStatesList(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // The Component's states\r\n  let [formData, setForm] = useState(initialSignupData);\r\n  let [errors, setErrors] = useState(initialSignupErrorsData);\r\n\r\n  // A fuction that will validate all the data in the form\r\n  const validateFormData = (fd) => {\r\n    let fieldsAreMissing = false;\r\n    for (const [field, data] of Object.entries(fd)) {\r\n      if (data.trim() === \"\") {\r\n        fieldsAreMissing = true;\r\n        setErrors((prev) => {\r\n          const errorList = [...prev[field]];\r\n          errorList.push(`${field.replaceAll(\"_\", \" \")} is missing.`);\r\n          return { ...prev, [field]: errorList };\r\n        });\r\n      }\r\n    }\r\n    if (fieldsAreMissing) {\r\n      return false;\r\n    }\r\n\r\n    const { password, confirm_password } = fd;\r\n    const passwordsValidation = signupPasswordValidation(\r\n      password,\r\n      confirm_password\r\n    );\r\n    if (passwordsValidation === true) {\r\n      return true;\r\n    } else {\r\n      setErrors((prev) => {\r\n        let confirmPasswordErrorList = [...prev.confirm_password];\r\n        confirmPasswordErrorList = confirmPasswordErrorList.concat(\r\n          passwordsValidation\r\n        );\r\n        return { ...prev, confirm_password: confirmPasswordErrorList };\r\n      });\r\n    }\r\n    return false;\r\n  };\r\n\r\n  // A function that would run the necessary validations before performing the onSubmit action from the props\r\n  const submitForm = (e) => {\r\n    setErrors(initialSignupErrorsData);\r\n    const isFormDataValid = validateFormData(formData);\r\n    if (!isFormDataValid) {\r\n      return false;\r\n    }\r\n\r\n    function signupSuccessCallback() {\r\n      history.push(redirect);\r\n    }\r\n\r\n    function signupErrorCallback(error) {\r\n      if (!error.response || error.response.status !== 400) {\r\n        console.log(error);\r\n        return false;\r\n      }\r\n      const errorMessage = \"invalid username and/or password.\";\r\n      setErrors((prev) => {\r\n        const usernameErrors = [...prev.username];\r\n        usernameErrors.push(errorMessage);\r\n        return { ...prev, username: usernameErrors };\r\n      });\r\n    }\r\n\r\n    signup(formData, signupSuccessCallback, signupErrorCallback);\r\n  };\r\n\r\n  // A function that updates the formData as the data changes in the input fields below\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Converting the errors state into displayable compoenents\r\n  const errorComponents = errorToFormErrorComponent(errors);\r\n  return (\r\n    <form className=\"auth-form container\">\r\n      <h2 className=\"auth-form-title container-title\">Signup for React Vote</h2>\r\n      <label className=\"form-label signup-label\">\r\n        Username:\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={formData.username}\r\n          onChange={handleChange}\r\n          className=\"form-field signup username-input\"\r\n          name=\"username\"\r\n        />\r\n        {errorComponents.username}\r\n      </label>\r\n      <label className=\"form-label signup-label\">\r\n        State:\r\n        <select\r\n          value={formData.state}\r\n          onChange={handleChange}\r\n          className=\"form-field form-datalist signup state-input\"\r\n          name=\"state\"\r\n        >\r\n          {statesList.map(({ value, content }) => (\r\n            <option key={value} value={value}>\r\n              {content}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {errorComponents.state}\r\n      </label>\r\n      <label className=\"form-label signup-label\">\r\n        Password:\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          className=\"form-field signup password-input\"\r\n          name=\"password\"\r\n        />\r\n        {errorComponents.password}\r\n      </label>\r\n      <label className=\"form-label signup-label\">\r\n        Confirm Password:\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          value={formData.confirm_password}\r\n          onChange={handleChange}\r\n          className=\"form-field signup confirm-password-input\"\r\n          name=\"confirm_password\"\r\n        />\r\n        {errorComponents.confirm_password}\r\n      </label>\r\n      <button\r\n        className=\"form-submit-btn container-btn\"\r\n        type=\"button\"\r\n        onClick={submitForm}\r\n      >\r\n        Sign Up\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","/mnt/d/web-dev/react-vote/src/pages/Home.js",[],"/mnt/d/web-dev/react-vote/src/index.js",[],"/mnt/d/web-dev/react-vote/src/components/FormError.js",[],"/mnt/d/web-dev/react-vote/src/contexts/AuthConext.js",[],"/mnt/d/web-dev/react-vote/src/components/ProtectedRoute.js",[],"/mnt/d/web-dev/react-vote/src/components/ElectionRoutes.js",[],"/mnt/d/web-dev/react-vote/src/components/DropdownMenu.js",[],["106","107"],"/mnt/d/web-dev/react-vote/src/helpers/requests.js",[],"/mnt/d/web-dev/react-vote/src/helpers/elections.js",[],"/mnt/d/web-dev/react-vote/src/helpers/passwordValidations.js",[],"/mnt/d/web-dev/react-vote/src/pages/VotesPage.js",[],["108","109"],"/mnt/d/web-dev/react-vote/src/pages/ResultsPage.js",[],"/mnt/d/web-dev/react-vote/src/components/Vote.js",[],"/mnt/d/web-dev/react-vote/src/components/ResultBox.js",[],"/mnt/d/web-dev/react-vote/src/pages/index.js",[],{"ruleId":"110","severity":1,"message":"111","line":32,"column":11,"nodeType":"112","messageId":"113","endLine":32,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":54,"column":6,"nodeType":"116","endLine":54,"endColumn":8,"suggestions":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"114","severity":1,"message":"124","line":10,"column":6,"nodeType":"116","endLine":10,"endColumn":8,"suggestions":"125"},{"ruleId":"114","severity":1,"message":"126","line":52,"column":6,"nodeType":"116","endLine":52,"endColumn":8,"suggestions":"127"},{"ruleId":"118","replacedBy":"128"},{"ruleId":"120","replacedBy":"129"},{"ruleId":"118","replacedBy":"130"},{"ruleId":"120","replacedBy":"131"},"no-unused-vars","'redirect' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadVotes' and 'votes'. Either include them or remove the dependency array.","ArrayExpression",["132"],"no-native-reassign",["133"],"no-negated-in-lhs",["134"],["133"],["134"],"React Hook useEffect has a missing dependency: 'logout'. Either include it or remove the dependency array.",["135"],"React Hook useEffect has a missing dependency: 'APIUrl'. Either include it or remove the dependency array.",["136"],["133"],["134"],["133"],["134"],{"desc":"137","fix":"138"},"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [loadVotes, votes]",{"range":"143","text":"144"},"Update the dependencies array to be: [logout]",{"range":"145","text":"146"},"Update the dependencies array to be: [APIUrl]",{"range":"147","text":"148"},[1417,1419],"[loadVotes, votes]",[245,247],"[logout]",[1346,1348],"[APIUrl]"]